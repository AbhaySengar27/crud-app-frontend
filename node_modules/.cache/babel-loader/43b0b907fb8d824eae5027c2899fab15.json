{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abhay\\\\Downloads\\\\crud_app_project\\\\crud-app-frontend\\\\src\\\\UserList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst UserList = () => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [editingUserId, setEditingUserId] = useState(null); // Tracks the user currently being edited\n  const [editUserData, setEditUserData] = useState({\n    id: '',\n    name: '',\n    email: '',\n    age: ''\n  }); // Tracks the editable fields\n\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n  const fetchUsers = () => {\n    axios.get('http://localhost:5000/api/users').then(response => {\n      setUsers(response.data);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n  const deleteUser = id => {\n    axios.delete(`http://localhost:5000/api/users/${id}`).then(() => {\n      fetchUsers(); // Refresh the list after deletion\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  // Handles the click of the Edit button for inline editing\n  const handleEditClick = user => {\n    setEditingUserId(user.id); // Set the editing state for the current user\n    setEditUserData(user); // Pre-fill the data in the editable fields\n  };\n\n  // Handles the input change when editing inline\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setEditUserData({\n      ...editUserData,\n      [name]: value\n    });\n  };\n\n  // Handles the Save button click to save the updated user details\n  const handleSaveClick = id => {\n    axios.put(`http://localhost:5000/api/users/${id}`, editUserData).then(() => {\n      setEditingUserId(null); // Exit editing mode after saving\n      fetchUsers(); // Refresh the user list\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-bordered table-hover\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        className: \"table-light\",\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Age\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: users.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: editingUserId === user.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              name: \"name\",\n              value: editUserData.name,\n              onChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 37\n            }, this) : user.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: editingUserId === user.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              className: \"form-control\",\n              name: \"email\",\n              value: editUserData.email,\n              onChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 37\n            }, this) : user.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: editingUserId === user.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              className: \"form-control\",\n              name: \"age\",\n              value: editUserData.age,\n              onChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 37\n            }, this) : user.age\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: editingUserId === user.id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-sm btn-success me-2\",\n                onClick: () => handleSaveClick(user.id),\n                children: \"Save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-sm btn-secondary\",\n                onClick: () => setEditingUserId(null),\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-sm btn-warning me-2\",\n                onClick: () => handleEditClick(user),\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-sm btn-danger\",\n                onClick: () => deleteUser(user.id),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 29\n          }, this)]\n        }, user.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n_s(UserList, \"EngQwssQGT6GUdfA1maLTxSCVrU=\");\n_c = UserList;\nexport default UserList;\nvar _c;\n$RefreshReg$(_c, \"UserList\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","UserList","_s","users","setUsers","editingUserId","setEditingUserId","editUserData","setEditUserData","id","name","email","age","fetchUsers","get","then","response","data","catch","error","console","log","deleteUser","delete","handleEditClick","user","handleInputChange","e","value","target","handleSaveClick","put","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","type","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/abhay/Downloads/crud_app_project/crud-app-frontend/src/UserList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst UserList = () => {\n    const [users, setUsers] = useState([]);\n    const [editingUserId, setEditingUserId] = useState(null); // Tracks the user currently being edited\n    const [editUserData, setEditUserData] = useState({ id: '', name: '', email: '', age: '' }); // Tracks the editable fields\n\n    useEffect(() => {\n        fetchUsers();\n    }, []);\n\n    const fetchUsers = () => {\n        axios.get('http://localhost:5000/api/users')\n            .then(response => {\n                setUsers(response.data);\n            })\n            .catch(error => {\n                console.log(error);\n            });\n    };\n\n    const deleteUser = (id) => {\n        axios.delete(`http://localhost:5000/api/users/${id}`)\n            .then(() => {\n                fetchUsers();  // Refresh the list after deletion\n            })\n            .catch(error => {\n                console.log(error);\n            });\n    };\n\n    // Handles the click of the Edit button for inline editing\n    const handleEditClick = (user) => {\n        setEditingUserId(user.id);  // Set the editing state for the current user\n        setEditUserData(user);  // Pre-fill the data in the editable fields\n    };\n\n    // Handles the input change when editing inline\n    const handleInputChange = (e) => {\n        const { name, value } = e.target;\n        setEditUserData({ ...editUserData, [name]: value });\n    };\n\n    // Handles the Save button click to save the updated user details\n    const handleSaveClick = (id) => {\n        axios.put(`http://localhost:5000/api/users/${id}`, editUserData)\n            .then(() => {\n                setEditingUserId(null);  // Exit editing mode after saving\n                fetchUsers();  // Refresh the user list\n            })\n            .catch(error => {\n                console.log(error);\n            });\n    };\n\n    return (\n        <div>\n            <h2>User List</h2>\n            <table className=\"table table-bordered table-hover\">\n                <thead className=\"table-light\">\n                    <tr>\n                        <th>Name</th>\n                        <th>Email</th>\n                        <th>Age</th>\n                        <th>Actions</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {users.map(user => (\n                        <tr key={user.id}>\n                            <td>\n                                {editingUserId === user.id ? (\n                                    <input\n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        name=\"name\"\n                                        value={editUserData.name}\n                                        onChange={handleInputChange}\n                                    />\n                                ) : (\n                                    user.name\n                                )}\n                            </td>\n                            <td>\n                                {editingUserId === user.id ? (\n                                    <input\n                                        type=\"email\"\n                                        className=\"form-control\"\n                                        name=\"email\"\n                                        value={editUserData.email}\n                                        onChange={handleInputChange}\n                                    />\n                                ) : (\n                                    user.email\n                                )}\n                            </td>\n                            <td>\n                                {editingUserId === user.id ? (\n                                    <input\n                                        type=\"number\"\n                                        className=\"form-control\"\n                                        name=\"age\"\n                                        value={editUserData.age}\n                                        onChange={handleInputChange}\n                                    />\n                                ) : (\n                                    user.age\n                                )}\n                            </td>\n                            <td>\n                                {editingUserId === user.id ? (\n                                    <>\n                                        <button\n                                            className=\"btn btn-sm btn-success me-2\"\n                                            onClick={() => handleSaveClick(user.id)}\n                                        >\n                                            Save\n                                        </button>\n                                        <button\n                                            className=\"btn btn-sm btn-secondary\"\n                                            onClick={() => setEditingUserId(null)}\n                                        >\n                                            Cancel\n                                        </button>\n                                    </>\n                                ) : (\n                                    <>\n                                        <button\n                                            className=\"btn btn-sm btn-warning me-2\"\n                                            onClick={() => handleEditClick(user)}\n                                        >\n                                            Edit\n                                        </button>\n                                        <button\n                                            className=\"btn btn-sm btn-danger\"\n                                            onClick={() => deleteUser(user.id)}\n                                        >\n                                            Delete\n                                        </button>\n                                    </>\n                                )}\n                            </td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n        </div>\n    );\n};\n\nexport default UserList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}